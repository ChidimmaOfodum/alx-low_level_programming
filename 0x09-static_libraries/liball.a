!<arch>
0-isupper.c/    0           0     0     644     271       `
#include "main.h"

/**
 * _isupper - Entry point for the function
 * Description: A function that checks if a letter is upper or lower
 * @c: int inpiut
 * Return: 0 or 1
 */

int _isupper(int c)
{
	if (c >= 65 && c <= 90)
	{
		return (1);
	}
	else
	{
		return (0);
	}
}

0-memset.c/     0           0     0     644     51        `
char *_memset(char *s, char b, unsigned int n)
{
}

0-strcat.c/     0           0     0     644     42        `
char *_strcat(char *dest, char *src)
{
}

100-atoi.c/     0           0     0     644     24        `
int _atoi(char *s)
{
}

1-isdigit.c/    0           0     0     644     237       `
#include "main.h"
/**
 * _isdigit - Entry point
 * Description: checks whether input is a digit
 * @c: input parameter
 * Return: 0 or 1
 */

int _isdigit(int c)
{
	if (c >= 48 && c <= 57)
	{
		return (1);
	}
	else
	{
		return (0);
	}
}

1-memcpy.c/     0           0     0     644     58        `
char *_memcpy(char *dest, char *src, unsigned int n)
{
}

1-strncat.c/    0           0     0     644     49        `
char *_strncat(char *dest, char *src, int n)
{
}

2-strchr.c/     0           0     0     644     36        `
char *_strchr(char *s, char c)
{
}

2-strlen.c/     0           0     0     644     25        `
int _strlen(char *s)
{
}

2-strncpy.c/    0           0     0     644     49        `
char *_strncpy(char *dest, char *src, int n)
{
}

3-islower.c/    0           0     0     644     216       `
#include "main.h"
/**
 * _islower- Entry point
 * @c: describe the parameter
 * Return: 1 if lowercase otherwise 0
 */

int _islower(int c)
{
	if (c >= 97 && c <= 122)
	{
		return (1);
	}
	else
	{
		return (0);
	}
}
3-puts.c/       0           0     0     644     198       `
#include "main.h"
/**
 * _puts - prints characters to stdout
 * @str: characters to be printed
 */

void _puts(char *str)
{
	while (*str != '\0')
	{
		_putchar(*str);
		str++;
	}
	_putchar('\n');
}
3-strcmp.c/     0           0     0     644     36        `
int _strcmp(char *s1, char *s2)
{
}
3-strspn.c/     0           0     0     644     49        `
unsigned int _strspn(char *s, char *accept)
{
}


4-isalpha.c/    0           0     0     644     283       `
#include "main.h"
/**
 * _isalpha - Entry point
 * Description: checks if input in an alphabet
 * @c: ASCII character
 * Return: 0 if alpha, 1 otherwise
 */

int _isalpha(int c)
{
	if ((c >= 65 && c <= 90)
			|| (c >= 97 && c <= 122))
	{
		return (1);
	}
	else
	{
		return (0);
	}
}

4-strpbrk.c/    0           0     0     644     42        `
char *_strpbrk(char *s, char *accept)
{
}
5-strstr.c/     0           0     0     644     48        `
char *_strstr(char *haystack, char *needle)
{
}
6-abs.c/        0           0     0     644     216       `
#include "main.h"
/**
 * _abs - Entry point
 * @n: a number
 * Description: computes absolute value of an integer
 * Return: 0
 */

int _abs(int n)
{
	if (n >= 0)
	{
		return (n);
	}
	else
	{
		return (n * -1);
	}
}
9-strcpy.c/     0           0     0     644     42        `
char *_strcpy(char *dest, char *src)
{
}

_putchar.c/     0           0     0     644     247       `
#include <unistd.h>

/**
 * _putchar - writes the character c to stdout
 * @c: The character to print
 *
 * Return: On success 1.
 * On error, -1 is returned, and errno is set appropriately.
 */
int _putchar(char c)
{
	return (write(1, &c, 1));
}

